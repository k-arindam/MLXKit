{"hierarchy":{"paths":[["doc:\/\/MLXKit\/documentation\/MLXKit","doc:\/\/MLXKit\/documentation\/MLXKit\/CoreML","doc:\/\/MLXKit\/documentation\/MLXKit\/CoreML\/MLMultiArray"]]},"abstract":[{"type":"text","text":"Converts the multi-array to a CGImage."}],"identifier":{"url":"doc:\/\/MLXKit\/documentation\/MLXKit\/CoreML\/MLMultiArray\/cgImage(min:max:channel:axes:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"title":"cgImage(min:max:channel:axes:)","externalID":"s:So12MLMultiArrayC6MLXKitE7cgImage3min3max7channel4axesSo10CGImageRefaSgSd_SdSiSgSi_S2itSgtF","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cgImage"},{"kind":"text","text":"("},{"kind":"externalParam","text":"min"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"max","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"axes","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")?) -> ","kind":"text"},{"preciseIdentifier":"c:@T@CGImageRef","kind":"typeIdentifier","text":"CGImage"},{"text":"?","kind":"text"}],"symbolKind":"method","extendedModule":"CoreML","modules":[{"relatedModules":["CoreML"],"name":"MLXKit"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cgImage","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"min"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":" = 0, "},{"text":"max","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":" = 255, ","kind":"text"},{"text":"channel","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"axes"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":")? = nil) -> ","kind":"text"},{"text":"CGImage","kind":"typeIdentifier","preciseIdentifier":"c:@T@CGImageRef"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The multi-array must have at least 2 dimensions for a grayscale image, or","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"at least 3 dimensions for a color image."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The default expected shape is (height, width) or (channels, height, width)."},{"type":"text","text":" "},{"text":"However, you can change this using the ","type":"text"},{"code":"axes","type":"codeVoice"},{"text":" parameter. For example, if","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the array shape is (1, height, width, channels), use "},{"code":"axes: (3, 1, 2)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"channel"},{"type":"text","text":" is not nil, only converts that channel to a grayscale image."},{"type":"text","text":" "},{"type":"text","text":"This lets you visualize individual channels from a multi-array with more"},{"text":" ","type":"text"},{"type":"text","text":"than 4 channels."}],"type":"paragraph"},{"inlineContent":[{"text":"Otherwise, converts all channels. In this case, the number of channels in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the multi-array must be 1 for grayscale, 3 for RGB, or 4 for RGBA."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"type":"codeVoice","code":"min"},{"type":"text","text":" and "},{"type":"codeVoice","code":"max"},{"text":" parameters to put the values from the array into","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the range [0, 255], if not already:"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"min"},{"text":": should be the smallest value in the data; this will be mapped to 0.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"max"},{"text":": should be the largest value in the data; will be mapped to 255.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"For example, if the range of the data in the multi-array is [-1, 1], use","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"min: -1, max: 1"},{"text":". If the range is already [0, 255], then use the defaults.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mlxkit\/coreml\/mlmultiarray\/cgimage(min:max:channel:axes:)"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://MLXKit/documentation/MLXKit":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/MLXKit\/documentation\/MLXKit","role":"collection","type":"topic","url":"\/documentation\/mlxkit","title":"MLXKit"},"doc://MLXKit/documentation/MLXKit/CoreML/MLMultiArray/cgImage(min:max:channel:axes:)":{"title":"cgImage(min:max:channel:axes:)","url":"\/documentation\/mlxkit\/coreml\/mlmultiarray\/cgimage(min:max:channel:axes:)","type":"topic","kind":"symbol","identifier":"doc:\/\/MLXKit\/documentation\/MLXKit\/CoreML\/MLMultiArray\/cgImage(min:max:channel:axes:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cgImage","kind":"identifier"},{"text":"(","kind":"text"},{"text":"min","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"max"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"axes","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")?) -> "},{"text":"CGImage","kind":"typeIdentifier","preciseIdentifier":"c:@T@CGImageRef"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Converts the multi-array to a CGImage."}]},"doc://MLXKit/documentation/MLXKit/CoreML/MLMultiArray":{"url":"\/documentation\/mlxkit\/coreml\/mlmultiarray","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"text":"MLMultiArray","kind":"identifier","preciseIdentifier":"c:objc(cs)MLMultiArray"}],"role":"symbol","type":"topic","identifier":"doc:\/\/MLXKit\/documentation\/MLXKit\/CoreML\/MLMultiArray","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"MLMultiArray","kind":"identifier"}],"title":"MLMultiArray"},"doc://MLXKit/documentation/MLXKit/CoreML":{"abstract":[],"role":"collection","type":"topic","url":"\/documentation\/mlxkit\/coreml","kind":"symbol","identifier":"doc:\/\/MLXKit\/documentation\/MLXKit\/CoreML","title":"CoreML"}}}